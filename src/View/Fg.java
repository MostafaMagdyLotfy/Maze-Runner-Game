/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.AmoState;
import Controller.ArmorState;
import Controller.Bomb2State;
import Controller.BombState;
import Controller.CareTaker;
import Controller.Context;
import Controller.Control;
import Controller.GiftHstate;
import Controller.Originator;
import Model.Ammo;
import Model.Cell;
import Model.GiftH;
import Model.Play;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.RenderingHints.Key;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import static java.lang.System.exit;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SpringLayout;
import javax.swing.Timer;

/**
 *
 * @author Ramy
 */
public class Fg extends javax.swing.JFrame implements KeyListener,ActionListener{
Play p=Play.getInstance();
BombState bomb=new BombState();
Bomb2State bomb1=new Bomb2State();
GiftHstate gifth= new GiftHstate();
AmoState ammo= new AmoState();
ArmorState as=new ArmorState();
Context context=new Context();
Ammo a=Ammo.getInstance();
boolean xr=true;
int count=0;
Control c;
private int m=0;
Timer timer;
boolean counter=false;
   public Fg() {
        initComponents();
        super.setFocusable(true);
         jLabel1.setVisible(false);
         jLabel2.setVisible(false);
         label2.setVisible(false);
         jLabel4.setVisible(false);
         jLabel5.setVisible(false);
         jLabel6.setVisible(false);
         arm.setVisible(false);
         label4.setVisible(false);
         jLabel7.setVisible(false);
         jLabel3.setVisible(false);
         label3.setVisible(false);
          label5.setVisible(false);
    }
   

    /*
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Cn = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        label3 = new javax.swing.JLabel();
        label5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        label4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        arm = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        Cn.setBackground(new java.awt.Color(255, 255, 255));
        Cn.setForeground(new java.awt.Color(255, 255, 255));
        Cn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout CnLayout = new javax.swing.GroupLayout(Cn);
        Cn.setLayout(CnLayout);
        CnLayout.setHorizontalGroup(
            CnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 657, Short.MAX_VALUE)
        );
        CnLayout.setVerticalGroup(
            CnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 850, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Health:");

        label2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        label2.setForeground(new java.awt.Color(255, 0, 0));
        label2.setText("100");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 0));
        jLabel3.setText("Score:");

        label3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        label3.setForeground(new java.awt.Color(204, 204, 0));
        label3.setText("0");

        label5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        label5.setForeground(new java.awt.Color(0, 153, 153));
        label5.setText("0");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Ammo:");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 153));
        jButton1.setText("Start Game");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        label4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        label4.setText("6");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 153));
        jLabel2.setText("time:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 255));
        jLabel5.setText("Armor:");

        arm.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        arm.setForeground(new java.awt.Color(51, 0, 255));
        arm.setText("0");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 153));
        jLabel7.setText("Sec.");

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arm, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(label4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Cn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(jLabel4))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(label2)
                                .addComponent(label4)
                                .addComponent(jLabel5)
                                .addComponent(arm)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel4))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(label5)
                                .addComponent(jLabel7))
                            .addComponent(jButton1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(label3)))))
                .addGap(12, 12, 12)
                .addComponent(Cn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jLabel1.setVisible(true);
  jLabel2.setVisible(true);
  label2.setVisible(true);
 jLabel4.setVisible(true);
 jLabel5.setVisible(true);
  jLabel6.setVisible(true);
  arm.setVisible(true);
  label4.setVisible(true);
  label5.setVisible(true);
  jLabel7.setVisible(true);
   jLabel3.setVisible(true);
   label3.setVisible(true);
   label5.setVisible(true);
   
        if(counter==true){
            
            
     
      Cell c=Model.Character.getInstance();
       Cell a=Model.Ammo.getInstance();
                    int tx = 0;
                    int ty = 0;
                    int score = 0;
                    int time = 0;
                    int armor=0;
                    int health = 0;
        	    int amo = 0;
    try
		{
			File Chechpoint = new File("Chechpoint.txt");
			Scanner s = new Scanner(Chechpoint);
		              tx= s.nextInt();
                              ty= s.nextInt();
                              score= s.nextInt();
                              time= s.nextInt();
                              armor= s.nextInt();
                              health= s.nextInt();
			     amo= s.nextInt();
			s.close();
		}
	   catch(FileNotFoundException fnf)
		{
		   System.out.println("fnf");
                }
     p.setHealth(health);
    p.setScore(score);
    p.setAmmo(amo);
    p.setArmor(armor);
     ((Model.Character)c).move(tx,ty);
    
       p.DrawSavedMap("Savedmap.txt",Cn.getGraphics());  
        
jButton1.setFocusable(false);

addKeyListener(this);
label2.setText(Integer.toString(p.getHealth()));
label4.setText(Integer.toString(p.getAmmo()));
label3.setText(Integer.toString(p.getScore()));
arm.setText(Integer.toString(p.getArmor()));
    m=time;
    timer=new Timer(1000,new ActionListener() {
    @Override
    public void actionPerformed(ActionEvent ae) {
m++;    
    label5.setText(m+"");}
} );
timer.start();
    p.makemaze2(Cn.getGraphics());
     jButton1.setEnabled(false);
 }
        else {
        Cn.paint(Cn.getGraphics());
        p.makemaze(Cn.getGraphics());   
jButton1.setFocusable(false);
addKeyListener(this);
timer=new Timer(1000,new ActionListener() {
    @Override
    public void actionPerformed(ActionEvent ae) {
m++;    
    label5.setText(m+"");}
} );
timer.start();
jButton1.setEnabled(false);
    }//GEN-LAST:event_jButton1ActionPerformed
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Play p=Play.getInstance();
                Fg instance =new Fg();
instance.setFocusable(true);
                 instance.setVisible(true);
 
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Cn;
    private javax.swing.JLabel arm;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel label2;
    private javax.swing.JLabel label3;
    private javax.swing.JLabel label4;
    private javax.swing.JLabel label5;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent ke) {
    }

    @Override
    public void keyPressed(KeyEvent ke) {
        try{
        int keyCode = ke.getKeyCode(); 
       Cell c=Model.Character.getInstance();
       Cell a=Model.Ammo.getInstance();
       if (keyCode==KeyEvent.VK_UP)
       { 
           
           if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-1)).equals("s"))
           ((Model.Character)c).move( 0,-1);
           else if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-1)).equals("b"))
           {
               bomb.doAction(context,(((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-1));
               if(p.getHealth()<=0)
               {
                   label2.setText(Integer.toString(p.getHealth()));
                   JOptionPane.showMessageDialog(null, "Game Over , You Died!!");
                  exit(0);
               }
                 label2.setText(Integer.toString(0));
                label3.setText(Integer.toString(p.getScore()));
           ((Model.Character)c).move( 0,-1);
               
           }
           else if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-1)).equals("B"))
            {bomb1.doAction(context,(((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-1));
            if(p.getHealth()<=0)
               {
                    label2.setText(Integer.toString(0));
                   JOptionPane.showMessageDialog(null, "Game Over , You Died!!");
                    
                  exit(0);
               }
              label2.setText(Integer.toString(p.getHealth()));
                label3.setText(Integer.toString(p.getScore()));
                arm.setText(Integer.toString(p.getArmor()));   ((Model.Character)c).move( 0,-1);   
            }
           else if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-1)).equals("h"))
            {gifth.doAction(context,(((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-1));
            label2.setText(Integer.toString(p.getHealth()));
                label3.setText(Integer.toString(p.getScore()));
                ((Model.Character)c).move( 0,-1);   
            }
           else if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-1)).equals("a"))
            {as.doAction(context,(((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-1)); 
                         arm.setText(Integer.toString(p.getArmor()));                            
  ((Model.Character)c).move( 0,-1);   
            }
                else if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-1)).equals("p"))
            {
               ammo.doAction(context,(((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-1));
label4.setText(Integer.toString(p.getAmmo()));
               ((Model.Character)c).move( 0,-1);     
            }
          else if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-1)).equals("z")){
           p.SetString((((Model.Character)c).gettilex()), (((Model.Character)c).gettiley()-1),"s");
            ((Model.Character)c).move( 0,-1);
           
               FileWriter fileWriter = null;
    try {
        Controller.Originator originator = new Originator();
        Controller.CareTaker careTaker = new CareTaker();
        originator.settx((((Model.Character)c).gettilex()));
        originator.setty((((Model.Character)c).gettiley()));
        originator.setHealth(p.getHealth());
        originator.setscore(p.getScore());
        originator.setam(p.getAmmo());
        originator.setTime(m);
         originator.setArmor(p.getArmor());
        careTaker.add(originator.saveStateToMemento());
        originator.getStateFromMemento(careTaker.get(0));
        System.out.println(originator.gettx());
        fileWriter = new FileWriter("Chechpoint.txt");
        PrintWriter printWriter = new PrintWriter(fileWriter);
        printWriter.print(originator.gettx()+" "+originator.getty()+" "+originator.getscore()+" "+originator.getTime()+" "+originator.getArmor()+" "+originator.getHealth()+" "+originator.getam());
        printWriter.close();
    } catch (IOException ex) {
        Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        try {
            fileWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
         FileWriter fileWriter2 = null;
        try {
        fileWriter2 = new FileWriter("Savedmap.txt");
    
        PrintWriter printWriter = new PrintWriter(fileWriter2);
        for(int i=0;i<30;i++)
            for(int j=0;j<30;j++)
        printWriter.print(p.getString(j,i)+" ");
        
        
        printWriter.close();
    } catch (IOException ex) {
        Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        try {
            fileWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        
          
          }
       }
       if (keyCode==KeyEvent.VK_DOWN)
       {  if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+1)).equals("s"))
           ((Model.Character)c).move( 0,1);
       else if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+1)).equals("b"))
           {bomb.doAction(context,(((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+1));
           if(p.getHealth()<=0)
               {
                   label2.setText(Integer.toString(0));
                   JOptionPane.showMessageDialog(null, "Game Over , You Died!!");
                  exit(0);
               }
            label2.setText(Integer.toString(p.getHealth()));
                label3.setText(Integer.toString(p.getScore()));
 arm.setText(Integer.toString(p.getArmor()));              
 ((Model.Character)c).move( 0,1);
               
           }
       else if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+1)).equals("B"))
            {bomb1.doAction(context,(((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+1));
            if(p.getHealth()<=0)
               {
                   label2.setText(Integer.toString(0));
                   JOptionPane.showMessageDialog(null, "Game Over , You Died!!");
                  exit(0);
               }
            label2.setText(Integer.toString(p.getHealth()));
                label3.setText(Integer.toString(p.getScore()));
               arm.setText(Integer.toString(p.getArmor()));    ((Model.Character)c).move( 0,1);   
            }
       else   if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+1)).equals("h"))
            {gifth.doAction(context,(((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+1));
           ((Model.Character)c).move( 0,1);
            label2.setText(Integer.toString(p.getHealth()));
                label3.setText(Integer.toString(p.getScore()));
            }
            else    if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+1)).equals("a"))
            {as.doAction(context,(((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+1));
                arm.setText(Integer.toString(p.getArmor()));                            
           ((Model.Character)c).move( 0,1);   
            }
                else     if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+1)).equals("p"))
            {
ammo.doAction(context,(((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+1));    
label4.setText(Integer.toString(p.getAmmo()));
((Model.Character)c).move( 0,1);     
            }
       else if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+1)).equals("z")){
           p.SetString((((Model.Character)c).gettilex()), (((Model.Character)c).gettiley()+1),"s");
            ((Model.Character)c).move( 0,1);
           
               FileWriter fileWriter = null;
    try {
        Controller.Originator originator = new Originator();
        Controller.CareTaker careTaker = new CareTaker();
        originator.settx((((Model.Character)c).gettilex()));
        originator.setty((((Model.Character)c).gettiley()));
        originator.setHealth(p.getHealth());
        originator.setscore(p.getScore());
        originator.setam(p.getAmmo());
         originator.setArmor(p.getArmor());
        originator.setTime(m);
        careTaker.add(originator.saveStateToMemento());
        originator.getStateFromMemento(careTaker.get(0));
        System.out.println(originator.gettx());
        fileWriter = new FileWriter("Chechpoint.txt");
    
        PrintWriter printWriter = new PrintWriter(fileWriter);
   printWriter.print(originator.gettx()+" "+originator.getty()+" "+originator.getscore()+" "+originator.getTime()+" "+originator.getArmor()+" "+originator.getHealth()+" "+originator.getam());        printWriter.close();
    } catch (IOException ex) {
        Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        try {
            fileWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        FileWriter fileWriter2 = null;
        try {
        fileWriter2 = new FileWriter("Savedmap.txt");
    
        PrintWriter printWriter = new PrintWriter(fileWriter2);
        for(int i=0;i<30;i++)
            for(int j=0;j<30;j++)
         printWriter.print(p.getString(j,i)+" ");
        printWriter.close();
    } catch (IOException ex) {
        Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        try {
            fileWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
       }
           
       }
       if (keyCode==KeyEvent.VK_LEFT)
       {  if(p.getString((((Model.Character)c).gettilex()-1),(((Model.Character)c).gettiley())).equals("s"))
           ((Model.Character)c).move( -1,0);
          else if(p.getString((((Model.Character)c).gettilex()-1),(((Model.Character)c).gettiley())).equals("b"))
           {
               bomb.doAction(context,(((Model.Character)c).gettilex()-1),(((Model.Character)c).gettiley()));
               if(p.getHealth()<=0)
               {
                    label2.setText(Integer.toString(0));
                   JOptionPane.showMessageDialog(null, "Game Over , You Died!!");
                  exit(0);
               }
          label2.setText(Integer.toString(p.getHealth()));
                label3.setText(Integer.toString(p.getScore()));
 arm.setText(Integer.toString(p.getArmor()));                   ((Model.Character)c).move( -1,0);
               
           }
          else if(p.getString((((Model.Character)c).gettilex()-1),(((Model.Character)c).gettiley())).equals("B"))
            {bomb1.doAction(context,(((Model.Character)c).gettilex()-1),(((Model.Character)c).gettiley()));
            if(p.getHealth()<=0)
               {
                    label2.setText(Integer.toString(0));
                   JOptionPane.showMessageDialog(null, "Game Over , You Died!!");
                  exit(0);
               }
            label2.setText(Integer.toString(p.getHealth()));
  arm.setText(Integer.toString(p.getArmor()));                 label3.setText(Integer.toString(p.getScore()));    ((Model.Character)c).move( -1,0);   
            }
          else if(p.getString((((Model.Character)c).gettilex()-1),(((Model.Character)c).gettiley())).equals("h"))
            {gifth.doAction(context,(((Model.Character)c).gettilex()-1),(((Model.Character)c).gettiley()));
            label2.setText(Integer.toString(p.getHealth()));
                label3.setText(Integer.toString(p.getScore()));
                ((Model.Character)c).move( -1,0);   
            }
               else if(p.getString((((Model.Character)c).gettilex()-1),(((Model.Character)c).gettiley())).equals("a"))
            {as.doAction(context,(((Model.Character)c).gettilex()-1),(((Model.Character)c).gettiley()));
                arm.setText(Integer.toString(p.getArmor()));                            
           ((Model.Character)c).move( -1,0);   
            }
                   else  if(p.getString((((Model.Character)c).gettilex()-1),(((Model.Character)c).gettiley())).equals("p"))
            {
               ammo.doAction(context,(((Model.Character)c).gettilex()-1),(((Model.Character)c).gettiley()));
label4.setText(Integer.toString(p.getAmmo()));
               ((Model.Character)c).move( -1,0);     
            }
       else if(p.getString((((Model.Character)c).gettilex()-1),(((Model.Character)c).gettiley())).equals("z")){
           p.SetString((((Model.Character)c).gettilex()-1), (((Model.Character)c).gettiley()),"s");
            ((Model.Character)c).move( -1,0);
           
               FileWriter fileWriter = null;
    try {
        Controller.Originator originator = new Originator();
        Controller.CareTaker careTaker = new CareTaker();
        originator.settx((((Model.Character)c).gettilex()));
        originator.setty((((Model.Character)c).gettiley()));
        originator.setHealth(p.getHealth());
        originator.setscore(p.getScore());
        originator.setam(p.getAmmo());
        originator.setTime(m);
        originator.setArmor(p.getArmor());
        careTaker.add(originator.saveStateToMemento());
        originator.getStateFromMemento(careTaker.get(0));
        System.out.println(originator.gettx());
        fileWriter = new FileWriter("Chechpoint.txt");
    
        PrintWriter printWriter = new PrintWriter(fileWriter);
   printWriter.print(originator.gettx()+" "+originator.getty()+" "+originator.getscore()+" "+originator.getTime()+" "+originator.getArmor()+" "+originator.getHealth()+" "+originator.getam());        printWriter.close();
    } catch (IOException ex) {
        Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        try {
            fileWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
       FileWriter fileWriter2 = null;
        try {
        fileWriter2 = new FileWriter("Savedmap.txt");
    
        PrintWriter printWriter = new PrintWriter(fileWriter2);
        for(int i=0;i<30;i++)
            for(int j=0;j<30;j++)
         printWriter.print(p.getString(j,i)+" ");
        printWriter.close();
    } catch (IOException ex) {
        Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        try {
            fileWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        }
       
      
       }
       if (keyCode==KeyEvent.VK_RIGHT)
       { 
           if(p.getString((((Model.Character)c).gettilex()+1),(((Model.Character)c).gettiley())).equals("s"))
               
           ((Model.Character)c).move( 1,0);
          else if(p.getString((((Model.Character)c).gettilex()+1),(((Model.Character)c).gettiley())).equals("b"))
           {
               bomb.doAction(context,(((Model.Character)c).gettilex()+1),(((Model.Character)c).gettiley()));
               if(p.getHealth()<=0)
               {
                    label2.setText(Integer.toString(0));
                   JOptionPane.showMessageDialog(null, "Game Over , You Died!!");
                  exit(0);
               }
            label2.setText(Integer.toString(p.getHealth()));
                label3.setText(Integer.toString(p.getScore()));
 arm.setText(Integer.toString(p.getArmor()));                  ((Model.Character)c).move( 1,0);
               
           }
           else if(p.getString((((Model.Character)c).gettilex()+1),(((Model.Character)c).gettiley())).equals("B"))
            {bomb1.doAction(context,(((Model.Character)c).gettilex()+1),(((Model.Character)c).gettiley()));
            if(p.getHealth()<=0)
               {
                    label2.setText(Integer.toString(0));
                   JOptionPane.showMessageDialog(null, "Game Over , You Died!!");
                  exit(0);
               }
            label2.setText(Integer.toString(p.getHealth()));
                label3.setText(Integer.toString(p.getScore()));  arm.setText(Integer.toString(p.getArmor()));     ((Model.Character)c).move( 1,0);   
            }
             else if(p.getString((((Model.Character)c).gettilex()+1),(((Model.Character)c).gettiley())).equals("h"))
            {gifth.doAction(context,(((Model.Character)c).gettilex()+1),(((Model.Character)c).gettiley()));
            label2.setText(Integer.toString(p.getHealth()));
                label3.setText(Integer.toString(p.getScore()));
                ((Model.Character)c).move( 1,0);   
            }
             else if(p.getString((((Model.Character)c).gettilex()+1),(((Model.Character)c).gettiley())).equals("a"))
            {
                as.doAction(context,(((Model.Character)c).gettilex()+1),(((Model.Character)c).gettiley()));
                arm.setText(Integer.toString(p.getArmor()));                            

           ((Model.Character)c).move( 1,0);   
            }
                  else   if(p.getString((((Model.Character)c).gettilex()+1),(((Model.Character)c).gettiley())).equals("p"))
            {
               ammo.doAction(context,(((Model.Character)c).gettilex()+1),(((Model.Character)c).gettiley()));
               label4.setText(Integer.toString(p.getAmmo()));
               ((Model.Character)c).move( 1,0);     
            }
            else   if(p.getString((((Model.Character)c).gettilex()+1),(((Model.Character)c).gettiley())).equals("f")){
                  JOptionPane.showMessageDialog(null, "You win");
                  exit(0);
            }
        else if(p.getString((((Model.Character)c).gettilex()+1),(((Model.Character)c).gettiley())).equals("z")){
           p.SetString((((Model.Character)c).gettilex()+1), (((Model.Character)c).gettiley()),"s");
            ((Model.Character)c).move( 1,0);
           
               FileWriter fileWriter = null;
    try {
        Controller.Originator originator = new Originator();
        Controller.CareTaker careTaker = new CareTaker();
        originator.settx((((Model.Character)c).gettilex()));
        originator.setty((((Model.Character)c).gettiley()));
        originator.setHealth(p.getHealth());
        originator.setscore(p.getScore());
        originator.setam(p.getAmmo());
         originator.setArmor(p.getArmor());
        originator.setTime(m);
        careTaker.add(originator.saveStateToMemento());
        originator.getStateFromMemento(careTaker.get(0));
        System.out.println(originator.gettx());
        fileWriter = new FileWriter("Chechpoint.txt");
    
        PrintWriter printWriter = new PrintWriter(fileWriter);
   printWriter.print(originator.gettx()+" "+originator.getty()+" "+originator.getscore()+" "+originator.getTime()+" "+originator.getArmor()+" "+originator.getHealth()+" "+originator.getam());        printWriter.close();
    } catch (IOException ex) {
        Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        try {
            fileWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        FileWriter fileWriter2 = null;
        try {
        fileWriter2 = new FileWriter("Savedmap.txt");
    
        PrintWriter printWriter = new PrintWriter(fileWriter2);
        for(int i=0;i<30;i++)
            for(int j=0;j<30;j++)
         printWriter.print(p.getString(j,i)+" ");
        printWriter.close();
    } catch (IOException ex) {
        Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        try {
            fileWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        }
       
       }
       int i;
       if (p.getAmmo()>0){
          if (keyCode==KeyEvent.VK_W){
              i=1;
             
              while(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-i)).equals("s")){
                          ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
                           ((Model.Ammo)a).move(0 ,-i);
                           Cell v=Model.Ammo.getInstance();
                            v.Setcell();
        Cn.getGraphics().drawImage(v.getCell(), ((Model.Ammo)v).gettilex()*22, ((Model.Ammo)v).gettiley()*22, null);       
        Cn.repaint();
                  try {
                    
                      
             Thread.sleep(50);
             Cn.repaint();
               i++;
              
                       } catch (InterruptedException ex) {
                      Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
                  }
              
              }
              
                       if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-i)).equals("b"))
           {
               ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
  p.SetString((((Model.Ammo)a).gettilex()),(((Model.Ammo)a).gettiley()-i),"s");             ((Model.Ammo)a).move( 0,-i);
          
            }
            if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-i)).equals("t")){
                ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
               p.SetString((((Model.Ammo)a).gettilex()),(((Model.Ammo)a).gettiley()-i),"s");
                 ((Model.Ammo)a).move( 0,-i);
            }
             if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-i)).equals("h"))
            {
                ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
  p.SetString((((Model.Ammo)a).gettilex()),(((Model.Ammo)a).gettiley()-i),"s");           ((Model.Ammo)a).move( 0,-i);   
            }
                if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-i)).equals("a"))
                    {
                  ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
  p.SetString((((Model.Ammo)a).gettilex()),(((Model.Ammo)a).gettiley()-i),"s");           ((Model.Ammo)a).move( 0,-i);  
            }
            if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()-i)).equals("p")){
                ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
               p.SetString((((Model.Ammo)a).gettilex()),(((Model.Ammo)a).gettiley()-i),"s");
                 ((Model.Ammo)a).move( 0,-i);
            }
             int hr=p.getAmmo();
                 hr--;
                 p.setAmmo(hr);
                 label4.setText(Integer.toString(p.getAmmo()));
                           //   repaint();
                                
              }
         
          if (keyCode==KeyEvent.VK_D){
              i=1;
                while(p.getString((((Model.Character)c).gettilex()+i),(((Model.Character)c).gettiley())).equals("s")){
                          
                          ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
                         
                           ((Model.Ammo)a).move(i ,0);
                             Cell v=Model.Ammo.getInstance();
                            v.Setcell();
                           Cn.getGraphics().drawImage(v.getCell(), ((Model.Ammo)v).gettilex()*22, ((Model.Ammo)v).gettiley()*22, null); 
                            Cn.repaint();
                           try {
             Thread.sleep(50);
             Cn.repaint();
               i++;
              
                       } catch (InterruptedException ex) {
                      Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
                  }
              
              }
                            
                       if(p.getString((((Model.Character)c).gettilex()+i),(((Model.Character)c).gettiley())).equals("b"))
           {
               ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
               p.SetString((((Model.Character)c).gettilex()+i),(((Model.Character)c).gettiley()),"s");
             ((Model.Ammo)a).move( i,0);
          
            }
            if(p.getString((((Model.Character)c).gettilex()+i),(((Model.Character)c).gettiley())).equals("t")){
                ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley()); 
               p.SetString((((Model.Character)c).gettilex()+i),(((Model.Character)c).gettiley()),"s");
                 ((Model.Ammo)a).move( i,0);
            }
               if(p.getString((((Model.Character)c).gettilex()+i),(((Model.Character)c).gettiley())).equals("h"))
            {
                ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
               p.SetString((((Model.Character)c).gettilex()+i),(((Model.Character)c).gettiley()),"s");
           ((Model.Ammo)a).move( i,0);   
            }
                if(p.getString((((Model.Character)c).gettilex()+i),(((Model.Character)c).gettiley())).equals("a"))
                    {
                  ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
               p.SetString((((Model.Character)c).gettilex()+i),(((Model.Character)c).gettiley()),"s");
           ((Model.Ammo)a).move( i,0);  
            }
                  if(p.getString((((Model.Character)c).gettilex()+i),(((Model.Character)c).gettiley())).equals("p")){
                ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley()); 
               p.SetString((((Model.Character)c).gettilex()+i),(((Model.Character)c).gettiley()),"s");
                 ((Model.Ammo)a).move( i,0);
            }
                   int hr=p.getAmmo();
                 hr--;
                 p.setAmmo(hr);
                 label4.setText(Integer.toString(p.getAmmo()));
                
                             //   repaint();
              
            }
               if (keyCode==KeyEvent.VK_A){
              i=1;
                while(p.getString((((Model.Character)c).gettilex()-i),(((Model.Character)c).gettiley())).equals("s")){
                      
                          ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
                           ((Model.Ammo)a).move(-i ,0);
                    Cell v=Model.Ammo.getInstance();
                            v.Setcell();
                           Cn.getGraphics().drawImage(v.getCell(), ((Model.Ammo)v).gettilex()*22, ((Model.Ammo)v).gettiley()*22, null); 
                            Cn.repaint();
                           try {
             Thread.sleep(50);
             Cn.repaint();
               i++;
              
                       } catch (InterruptedException ex) {
                      Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
                  }   
                           
              }
                       if(p.getString((((Model.Character)c).gettilex()-i),(((Model.Character)c).gettiley())).equals("b"))
           {
               ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
               p.SetString((((Model.Character)c).gettilex()-i),(((Model.Character)c).gettiley()),"s");
             ((Model.Ammo)a).move( -i,0);
          
            }
            if(p.getString((((Model.Character)c).gettilex()-i),(((Model.Character)c).gettiley())).equals("t")){
                ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
               p.SetString((((Model.Character)c).gettilex()-i),(((Model.Character)c).gettiley()),"s");
                 ((Model.Ammo)a).move( -i,0);
            }
                  if(p.getString((((Model.Character)c).gettilex()-i),(((Model.Character)c).gettiley())).equals("h"))
            {
                ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
               p.SetString((((Model.Character)c).gettilex()-i),(((Model.Character)c).gettiley()),"s");
           ((Model.Ammo)a).move( -i,0);   
            }
                if(p.getString((((Model.Character)c).gettilex()-i),(((Model.Character)c).gettiley())).equals("a"))
                    {
                  ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
               p.SetString((((Model.Character)c).gettilex()-i),(((Model.Character)c).gettiley()),"s");
           ((Model.Ammo)a).move( -i,0);  
            }
                 if(p.getString((((Model.Character)c).gettilex()-i),(((Model.Character)c).gettiley())).equals("p")){
                ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
               p.SetString((((Model.Character)c).gettilex()-i),(((Model.Character)c).gettiley()),"s");
                 ((Model.Ammo)a).move( -i,0);
            }
                 int hr=p.getAmmo();
                 hr--;
                 p.setAmmo(hr);
                 label4.setText(Integer.toString(p.getAmmo()));
                                //repaint();
              
            }
               if (keyCode==KeyEvent.VK_S){
              i=1;
              while(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+i)).equals("s")){
                      
                          ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
                           ((Model.Ammo)a).move(0 ,i);
              Cell v=Model.Ammo.getInstance();
                            v.Setcell();
                           Cn.getGraphics().drawImage(v.getCell(), ((Model.Ammo)v).gettilex()*22, ((Model.Ammo)v).gettiley()*22, null); 
                            Cn.repaint();
                           try {
             Thread.sleep(50);
             Cn.repaint();
               i++;
              
                       } catch (InterruptedException ex) {
                      Logger.getLogger(Fg.class.getName()).log(Level.SEVERE, null, ex);
                  }
                           
              }
                       if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+i)).equals("b"))
           {
               ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
               p.SetString((((Model.Ammo)a).gettilex()),(((Model.Ammo)a).gettiley()+i),"s");
             ((Model.Ammo)a).move( 0,i);
          
            }
            if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+i)).equals("t")){
                ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
               p.SetString((((Model.Ammo)a).gettilex()),(((Model.Ammo)a).gettiley()+i),"s");
                 ((Model.Ammo)a).move( 0,i);
            }
            if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+i)).equals("h"))
            {
                ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
               p.SetString((((Model.Ammo)a).gettilex()),(((Model.Ammo)a).gettiley()+i),"s");
           ((Model.Ammo)a).move( 0,i);   
            }
                if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+i)).equals("a"))
                    {
                  ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
               p.SetString((((Model.Ammo)a).gettilex()),(((Model.Ammo)a).gettiley()+i),"s");
           ((Model.Ammo)a).move( 0,i);  
            }
                 if(p.getString((((Model.Character)c).gettilex()),(((Model.Character)c).gettiley()+i)).equals("p")){
                ((Model.Ammo)a).SetTile(((Model.Character)c).gettilex(), ((Model.Character)c).gettiley());
               p.SetString((((Model.Ammo)a).gettilex()),(((Model.Ammo)a).gettiley()+i),"s");
                 ((Model.Ammo)a).move( 0,i);
            }
                  int hr=p.getAmmo();
                 hr--;
                 p.setAmmo(hr);
                 label4.setText(Integer.toString(p.getAmmo()));
           // repaint();
                                
              }}
        }catch(Exception e){
            
        }
    
    }

    @Override
    public void keyReleased(KeyEvent ke) {     
      Cn.paint(Cn.getGraphics());
        p.makemaze2(Cn.getGraphics());
    }      

    @Override
    public void actionPerformed(ActionEvent ae) {
                 
    }
}
